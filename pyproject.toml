[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "arcana"
description = "Abstraction of Repository-Centric ANAlysis (Arcana): A rramework for analysing on file-based datasets \"in-place\" (i.e. without manual download)"
readme = "README.rst"
requires-python = ">=3.8"
dependencies = [
    "attrs>=22.1.0",
    "build >=0.9",
    "click >=8.1.3",
    "click-option-group>=0.5.5",
    "deepdiff>=3.3",
    "docker>=5.0.2",
    "fasteners>=0.18",
    "fileformats[extended] >=0.3.3",
    "flit_scm >=1.7.0",
    "hatchling >=1.12.2",
    "hatch-vcs >= 0.3.0",
    "importlib-metadata>=1.4",
    "neurodocker>=0.9.4",
    "pydra",
    "PyYAML>=6.0",
]
license = {file = "LICENSE"}
authors = [{name = "Thomas G. Close", email = "tom.g.close@gmail.com"}]
maintainers = [{name = "Thomas G. Close", email = "tom.g.close@gmail.com"}]
keywords = ["arcana"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "black",
    "codespell",
    "flake8",
    "flake8-pyproject",
    "pre-commit",
]
docs = [
    "docutils>=0.10",
    "furo>=2022.2.14.1",
    "mock>1.0",
    "numpydoc>=0.6.0",
    "packaging",
    "sphinx >=2.1.2",
    "sphinx-argparse>=0.2.0",
    "sphinx-click>=3.1",
]
test = [
    "codecov",
    "fileformats-testing",
    "fileformats-medimage[extended]",
    "pytest>=6.2.5",
    "pytest-cov>=2.12.1",
    "pytest-env>=0.6.2",
]

[project.urls]
documentation = "https://arcana.readthedocs.io"
homepage = "https://arcana.readthedocs.io"
repository = "https://github.com/ArcanaFramework/arcana.git"

[project.scripts]
arcana = "arcana.core.cli:cli"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "arcana/core/_version.py"

[tool.hatch.build]
packages = [
    "arcana",
]
exclude = [
    "/tests",
]

[tool.black]
line-length = 88
target-version = ["py37"]
exclude = "_version.py"

[tool.flake8]
doctests = true
per-file-ignores = [
    "__init__.py:F401"
]
max-line-length = 88
select = "C,E,F,W,B,B950"
extend-ignore = ['E203', 'E501', 'E129', 'W503']
